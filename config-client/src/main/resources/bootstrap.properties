#对应git仓库中的配置文件的名称
#spring.application.name=didispace
#如果服务端searchPaths没有指定git仓库的app-client-config则无法找到该配置而启动失败
spring.application.name=application
server.port=7002

spring.cloud.config.profile=prod
#如果未配label默认即为master分支
spring.cloud.config.label=master
#二.方法②security在url中添加用户名和密码 spring.cloud.config.uri=http://xuekui:123456@localhost:7001/
#如果使用高可用注册中心eureka配置可以将该配置注释掉
#spring.cloud.config.uri=http://localhost:7001/

##二.方法①security 安全校验的用户名密码与服务端对应
spring.cloud.config.username=xuekui
spring.cloud.config.password=123456

#####三.高可用配置#####
##config server高可用配置添加入eureka配置中心管理
eureka.client.serviceUrl.defaultZone=http://localhost:9999/eureka/
#开启通过服务来访问config server
spring.cloud.config.discovery.enabled=true
#通过serviceId指定config-server在注册中心的服务名称
spring.cloud.config.discovery.serviceId=config-server
#添加快速失败配置用于提前检测config-server是否正常
spring.cloud.config.failFast=true
#初始重试间隔时间默认1000ms
spring.cloud.config.retry.multiplier=1000
#下一间隔的乘数默认1.1，例如1 1*1.1 1.1*1.1
spring.cloud.config.retry.initial-interval=1100
#最大间隔时间默认2000
spring.cloud.config.retry.max-interval=2000
#最大重试次数默认6
spring.cloud.config.retry.max-attempts=6


#########################   Rabbitmq   ##################
spring.rabbitmq.host=10.30.0.211
spring.rabbitmq.port=5672
spring.rabbitmq.username=sokos
spring.rabbitmq.password=cnhawk.org
spring.rabbitmq.virtual-host=/

##springcloud bus使用kafka作为消息总线，测试失败连接不上虚拟机中kafka
#spring.kafka.bootstrap-servers=192.167.157.128:9092
##spring.kafka.consumer.group-id=test
#management.endpoints.web.exposure.include='*'
#spring.cloud.bus.refresh.enabled=true




